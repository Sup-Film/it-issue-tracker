// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum define
enum Role {
  USER
  SUPPORT
  ADMIN
}

enum IssueStatus {
  NEW
  IN_PROGRESS
  RESOLVED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

// -- Data model --
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations 1:n 1 user <-> n issues
  createdIssues   Issue[] @relation("CreatedBy") // issue ที่ user นี้เป็นผู้สร้าง (map กับ author ใน Issue)
  assignedIssues  Issue[] @relation("AssignedTo") // issue ที่ user นี้เป็นผู้รับผิดชอบ (map กับ assignee ใน Issue)
  updatedByIssues Issue[] @relation("UpdatedBy") // issue ที่ user นี้เป็นผู้ที่อัปเดตล่าสุด (map กับ updatedBy ใน Issue)
}

model Issue {
  id          String      @id @default(cuid())
  title       String
  description String
  status      IssueStatus @default(NEW)
  priority    Priority    @default(MEDIUM)
  category    String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // Relations
  authorId    String // FK: id ของ user ที่สร้าง issue นี้
  author      User    @relation("CreatedBy", fields: [authorId], references: [id]) // ความสัมพันธ์กับ User (ผู้สร้าง issue)
  assigneeId  String? // FK: id ของ user ที่รับผิดชอบ (optional, อาจยังไม่มีคนรับ)
  assignee    User?   @relation("AssignedTo", fields: [assigneeId], references: [id]) // ความสัมพันธ์กับ User (ผู้รับผิดชอบ)
  updatedById String? // FK: id ของ user ที่อัปเดต issue ล่าสุด (optional, อาจยังไม่มี)
  updatedBy   User?   @relation("UpdatedBy", fields: [updatedById], references: [id]) // ความสัมพันธ์กับ User (ผู้ที่อัปเดตล่าสุด)
}
