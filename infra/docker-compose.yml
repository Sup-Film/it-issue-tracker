services:
  # Frontend Service (Next.js)
  frontend:
    build:
      context: ../
      dockerfile: frontend/Dockerfile
    container_name: it_issue_tracker_frontend
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_BASE_URL=/api
      - INTERNAL_API_BASE_URL=http://backend:8080/api
    restart: unless-stopped

  # Backend Service (Express.js)
  backend:
    build:
      context: ..
      dockerfile: ./backend/Dockerfile
    container_name: it_issue_tracker_backend
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:1234@db:5432/it_issue_tracker?schema=public
      - SERVER_PORT=8080
      - WEBHOOK_URL=http://webhook-listener:4000/webhook
      - WEBHOOK_SECRET=07d3beb2339f42cb7065c14de70f41dcfbf46f63f323a8372e6116ef6d8eeed0
    # Use entrypoint script to migrate, seed, then start
    command: ["./scripts/entrypoint.sh"]
    restart: unless-stopped

  

  # Webhook Listener Service
  webhook-listener:
    build:
      context: ../
      dockerfile: webhook-listener/Dockerfile
    container_name: it_issue_tracker_webhook_listener
    ports:
      - "4000:4000"
    networks:
      - app-network
    environment:
      - WEBHOOK_SECRET=07d3beb2339f42cb7065c14de70f41dcfbf46f63f323a8372e6116ef6d8eeed0
      - SERVER_PORT=4000
    restart: unless-stopped

  # Database Service (PostgreSQL)
  db:
    image: postgres:17-alpine
    container_name: it_issue_tracker_db
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=it_issue_tracker
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local